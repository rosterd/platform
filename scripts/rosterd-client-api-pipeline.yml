trigger:
  branches:
    include:
      - main
  paths:
    include:
      - scripts/rosterd-client-api-pipeline.yml
      -  src/backend/Rosterd.Client.Api

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

- task: DotNetCoreCLI@2
  displayName: Restore Packages
  inputs:
    command: restore
    projects: '**/*.csproj'
    vstsFeed: 'Framework'


- script: |
    dotnet build --configuration Release
  workingDirectory: 'src/backend/Rosterd.Client.Api'

# - task: DotNetCoreCLI@2
#   displayName: Run All Tests
#   inputs:
#     command: test
#     projects: '**/*tests/*.csproj'
#     publishTestResults: true
#     arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    arguments: '--configuration Release --output publish_output'
    projects: 'src/backend/Rosterd.Client.Api'
    publishWebProjects: false
    modifyOutputPath: false
    zipAfterPublish: false

- task: ArchiveFiles@2
  displayName: "Archive files"
  inputs:
    rootFolderOrFile: "$(System.DefaultWorkingDirectory)/src/backend/Rosterd.Client.Api/publish_output"
    includeRootFolder: false
    archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"

- task: PublishBuildArtifacts@1
    inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
    artifactName: 'drop'
