<?xml version="1.0" encoding="UTF-8" ?>
<project name="AzureSql" id="Project_183e" database="AzureSql" >
	<schema name="dbo" catalogname="rosterd" >
		<table name="Capability" generator_rows="25" row_count="0" >
			<column name="CapabilityId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[identity]]></identity>
			</column>
			<column name="CapabilityName" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" regexp="((Corporate|Technical|National|International|Business|Consumer|Accessory)Sales|Technical|Marketing|Accounting|Cutomer|Service|Prepaid Customer|Corporate Care|Web)" />
			<index name="Pk_FacilityFeature_FacilityFeatureId" unique="PRIMARY_KEY" >
				<column name="CapabilityId" />
			</index>
		</table>
		<table name="Facility" generator_rows="20" row_count="0" >
			<column name="FacilityId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[identity]]></identity>
			</column>
			<column name="FacilityName" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" regexp="(AL|AK|AZ|AR|CA|CO|CT|DE|FL|GA|HI|ID|IL|IN|IA|KS|KY|LA|ME|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|OH|OK|OR|PA|RI|SC|SD|TN|TX|UT|VT|VA|WA|WV|WI|WY)-[A-Z]{2}" />
			<column name="OrganzationId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="Address" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" />
			<column name="Suburb" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" />
			<column name="City" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" />
			<column name="Country" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" />
			<column name="PhoneNumber1" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" />
			<column name="PhoneNumber2" type="nvarchar" length="1000" decimal="0" jt="12" />
			<index name="Pk_Facility_FacilityId" unique="PRIMARY_KEY" >
				<column name="FacilityId" />
			</index>
			<fk name="Fk_Facility_Organization" to_schema="rosterd.dbo" to_table="Organization" >
				<fk_column name="OrganzationId" pk="OrganizationId" />
			</fk>
		</table>
		<table name="FacilityCapability" generator_rows="50" row_count="0" >
			<column name="FacilityCapabilityId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[identity]]></identity>
			</column>
			<column name="FacilityId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="CapabilityId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="Pk_FacilityCapability_FacilityCapabilityId" unique="PRIMARY_KEY" >
				<column name="FacilityCapabilityId" />
			</index>
			<fk name="Fk_FacilityCapability_Capability" to_schema="rosterd.dbo" to_table="Capability" >
				<fk_column name="CapabilityId" pk="CapabilityId" />
			</fk>
			<fk name="Fk_FacilityCapability_Facility" to_schema="rosterd.dbo" to_table="Facility" >
				<fk_column name="FacilityId" pk="FacilityId" />
			</fk>
		</table>
		<table name="Job" generator_rows="0" row_count="0" >
			<column name="JobId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[identity]]></identity>
			</column>
			<column name="JobTitle" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" />
			<column name="Description" type="varchar" length="8000" decimal="0" jt="12" mandatory="y" />
			<column name="FacilityId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="JobStartDateTimeUTC" type="datetime2" length="7" decimal="0" jt="92" mandatory="y" />
			<column name="JobEndDateTimeUTC" type="datetime2" length="7" decimal="0" jt="92" mandatory="y" />
			<column name="Comments" type="nvarchar" length="1000" decimal="0" jt="12" />
			<column name="GracePeriodToCancelMinutes" type="bigint" length="19" decimal="0" jt="-5" />
			<column name="NoGracePeriod" type="bit" length="1" decimal="0" jt="-7" />
			<index name="Pk_Job_JobId" unique="PRIMARY_KEY" >
				<column name="JobId" />
			</index>
		</table>
		<table name="JobSkill" prior="Jobskill" generator_rows="0" row_count="0" >
			<column name="JobSkillId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="JobId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="SkillId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="Pk_Jobskill_JobSkillId" unique="PRIMARY_KEY" >
				<column name="JobSkillId" />
			</index>
			<fk name="Fk_Jobskill_Job" to_schema="rosterd.dbo" to_table="Job" >
				<fk_column name="JobId" pk="JobId" />
			</fk>
		</table>
		<table name="JobStatus" generator_rows="0" row_count="0" >
			<column name="JobStatusId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[identity]]></identity>
			</column>
			<column name="JobStatusName" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" />
			<column name="Description" type="nvarchar" length="1000" decimal="0" jt="12" />
			<index name="Pk_JobStatus_JobStatusId" unique="PRIMARY_KEY" >
				<column name="JobStatusId" />
			</index>
		</table>
		<table name="JobStatusChange" generator_rows="0" row_count="0" >
			<column name="JobStatusChangeId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[identity]]></identity>
			</column>
			<column name="JobId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="JobStatusId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="JobStatusChangeDateTimeUTC" type="datetime2" length="1" decimal="0" jt="92" mandatory="y" >
				<defo><![CDATA[switchoffset(sysdatetimeoffset(),'+00:00')]]></defo>
			</column>
			<column name="JobStatusChangeReason" type="nvarchar" length="1000" decimal="0" jt="12" />
			<index name="Pk_JobStatusChange_JobStatusChangeId" unique="PRIMARY_KEY" >
				<column name="JobStatusChangeId" />
			</index>
			<fk name="Fk_JobStatusChange_Job" to_schema="rosterd.dbo" to_table="Job" >
				<fk_column name="JobId" pk="JobId" />
			</fk>
			<fk name="Fk_JobStatusChange_JobStatus" to_schema="rosterd.dbo" to_table="JobStatus" >
				<fk_column name="JobStatusId" pk="JobStatusId" />
			</fk>
		</table>
		<table name="Organization" generator_rows="2" row_count="0" >
			<column name="OrganizationId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[identity]]></identity>
			</column>
			<column name="TenantId" type="bigint" jt="-5" mandatory="y" />
			<column name="OrganizationName" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" regexp="(Re|Ad|Par|Tru|Thru|In|Bar|Cip|Dop|End|Em|Fro|Gro|Hap|Kli|Lom|Mon|Qwi|Rap|Sup|Sur|Tip|Tup|Un|Up|Var|Win|Zee)(ban|cad|dud|dim|er|frop|glib|hup|jub|kil|mun|nip|peb|pick|quest|rob|sap|sip|tan|tin|tum|ven|wer|werp|zap)(il|ic|im|in|up|ad|ack|am|on|ep|ed|ef|eg|aqu|ef|edg|op|oll|omm|ew|an|ex|pl)?(icator|or|ar|ax|an|ex|istor|entor|antor|in|over|ower|azz)(([ -]?Pro|Duplex|Multi){0}) (Direct|WorldWide|Holdings|International) (Inc|Company|Group|Corp.)?" />
			<column name="Address" type="nvarchar" length="1000" decimal="0" jt="12" />
			<index name="Pk_Organization_OrganizationId" unique="PRIMARY_KEY" >
				<column name="OrganizationId" />
			</index>
			<fk name="Fk_Organization_Tenant" to_schema="rosterd.dbo" to_table="Tenant" >
				<fk_column name="TenantId" pk="TenantId" />
			</fk>
		</table>
		<table name="Skill" generator_rows="25" row_count="0" >
			<column name="SkillId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="Skill" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" regexp="((Corporate|Technical|National|International|Business|Consumer|Accessory)Sales|Technical|Marketing|Accounting|Cutomer|Service|Prepaid Customer|Corporate Care|Web)" />
			<column name="Description" type="nvarchar" length="1000" decimal="0" jt="12" />
			<index name="Pk_Skill_SkillId" unique="PRIMARY_KEY" >
				<column name="SkillId" />
			</index>
		</table>
		<table name="Staff" generator_rows="15" row_count="2" >
			<column name="StaffId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[identity]]></identity>
			</column>
			<column name="FirstName" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" />
			<column name="MiddleName" type="nvarchar" length="1000" decimal="0" jt="12" />
			<column name="LastName" type="nvarchar" length="1000" decimal="0" jt="12" mandatory="y" />
			<column name="JobTitle" type="nvarchar" length="1000" decimal="0" jt="12" />
			<column name="IsAvailable" type="bit" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="DateOfBirth" type="date" length="10" decimal="0" jt="91" />
			<column name="Email" type="nvarchar" length="1000" decimal="0" jt="12" />
			<column name="HomePhoneNumber" type="nvarchar" length="1000" decimal="0" jt="12" />
			<column name="MobilePhoneNumber" type="nvarchar" length="1000" decimal="0" jt="12" />
			<column name="OtherPhoneNumber" type="nvarchar" length="1000" decimal="0" jt="12" />
			<column name="Address" type="nvarchar" length="1000" decimal="0" jt="12" />
			<column name="Comments" type="nvarchar" length="1000" decimal="0" jt="12" />
			<index name="Pk_Resource_ResourceId" unique="PRIMARY_KEY" >
				<column name="StaffId" />
			</index>
		</table>
		<table name="StaffFacility" generator_rows="50" row_count="0" >
			<column name="StaffFacilityId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[identity]]></identity>
			</column>
			<column name="StaffId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="FacilityId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="Pk_StaffFacility_StaffFacilityId" unique="PRIMARY_KEY" >
				<column name="StaffFacilityId" />
			</index>
			<fk name="Fk_StaffFacility_Staff" to_schema="rosterd.dbo" to_table="Staff" >
				<fk_column name="StaffId" pk="StaffId" />
			</fk>
		</table>
		<table name="StaffSkill" generator_rows="50" row_count="0" >
			<column name="StaffSkillId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[identity]]></identity>
			</column>
			<column name="StaffId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<column name="SkillId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" />
			<index name="Pk_StaffSkill_StaffSkillId" unique="PRIMARY_KEY" >
				<column name="StaffSkillId" />
			</index>
			<fk name="Fk_StaffSkill_Staff" to_schema="rosterd.dbo" to_table="Staff" >
				<fk_column name="StaffId" pk="StaffId" />
			</fk>
		</table>
		<table name="Tenant" generator_rows="1" >
			<column name="TenantId" type="bigint" length="19" decimal="0" jt="-5" mandatory="y" >
				<identity><![CDATA[identity]]></identity>
			</column>
			<column name="TenantName" type="nvarchar" length="1000" jt="12" mandatory="y" regexp="(Re|Ad|Par|Tru|Thru|In|Bar|Cip|Dop|End|Em|Fro|Gro|Hap|Kli|Lom|Mon|Qwi|Rap|Sup|Sur|Tip|Tup|Un|Up|Var|Win|Zee)(ban|cad|dud|dim|er|frop|glib|hup|jub|kil|mun|nip|peb|pick|quest|rob|sap|sip|tan|tin|tum|ven|wer|werp|zap)(il|ic|im|in|up|ad|ack|am|on|ep|ed|ef|eg|aqu|ef|edg|op|oll|omm|ew|an|ex|pl)?(icator|or|ar|ax|an|ex|istor|entor|antor|in|over|ower|azz)" />
			<index name="Pk_Tenant_TenantId" unique="PRIMARY_KEY" >
				<column name="TenantId" />
			</index>
		</table>
		<table name="sysdiagrams" row_count="2" >
			<column name="diagram_id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[identity]]></identity>
			</column>
			<column name="name" type="sysname" length="128" decimal="0" jt="12" mandatory="y" />
			<column name="principal_id" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="version" type="int" length="10" decimal="0" jt="4" />
			<column name="definition" type="varbinary(max)" length="0" decimal="0" jt="-3" />
			<index name="PK__sysdiagr__C2B05B6104F46102" unique="PRIMARY_KEY" >
				<column name="diagram_id" />
			</index>
			<index name="UK_principal_name" unique="UNIQUE_KEY" >
				<column name="principal_id" />
				<column name="name" />
			</index>
		</table>
		<procedure name="sp_alterdiagram" id="Procedure_2356" isSystem="false" params_known="y" >
			<string><![CDATA[	CREATE PROCEDURE dbo.sp_alterdiagram
	(
		@diagramname 	sysname,
		@owner_id	int	= null,
		@version 	int,
		@definition 	varbinary(max)
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
	
		declare @theId 			int
		declare @retval 		int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
		declare @ShouldChangeUID	int
	
		if(@diagramname is null)
		begin
			RAISERROR ('Invalid ARG', 16, 1)
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID();	 
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		revert;
	
		select @ShouldChangeUID = 0
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		
		if(@DiagId IS NULL or (@IsDbo = 0 and @theId <> @UIDFound))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);
			return -3
		end
	
		if(@IsDbo <> 0)
		begin
			if(@UIDFound is null or USER_NAME(@UIDFound) is null) -- invalid principal_id
			begin
				select @ShouldChangeUID = 1 ;
			end
		end
		-- update dds data			
		update dbo.sysdiagrams set definition = @definition where diagram_id = @DiagId ;
		-- change owner
		if(@ShouldChangeUID = 1)
			update dbo.sysdiagrams set principal_id = @theId where diagram_id = @DiagId ;
		-- update dds version
		if(@version is not null)
			update dbo.sysdiagrams set version = @version where diagram_id = @DiagId ;
		return 0
	END
	]]></string>
			<input_param name="@diagramname" jt="12" type="sysname" />
			<input_param name="@owner_id" jt="4" type="int" />
			<input_param name="@version" jt="4" type="int" />
			<input_param name="@definition" jt="2004" type="image" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="sp_creatediagram" id="Procedure_1cb9" isSystem="false" params_known="y" >
			<string><![CDATA[	CREATE PROCEDURE dbo.sp_creatediagram
	(
		@diagramname 	sysname,
		@owner_id		int	= null, 	
		@version 		int,
		@definition 	varbinary(max)
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
	
		declare @theId int
		declare @retval int
		declare @IsDbo	int
		declare @userName sysname
		if(@version is null or @diagramname is null)
		begin
			RAISERROR (N'E_INVALIDARG', 16, 1);
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID(); 
		select @IsDbo = IS_MEMBER(N'db_owner');
		revert; 
		
		if @owner_id is null
		begin
			select @owner_id = @theId;
		end
		else
		begin
			if @theId <> @owner_id
			begin
				if @IsDbo = 0
				begin
					RAISERROR (N'E_INVALIDARG', 16, 1);
					return -1
				end
				select @theId = @owner_id
			end
		end
		-- next 2 line only for test, will be removed after define name unique
		if EXISTS(select diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @diagramname)
		begin
			RAISERROR ('The name is already used.', 16, 1);
			return -2
		end
	
		insert into dbo.sysdiagrams(name, principal_id , version, definition)
				VALUES(@diagramname, @theId, @version, @definition) ;
		
		select @retval = @@IDENTITY 
		return @retval
	END
	]]></string>
			<input_param name="@diagramname" jt="12" type="sysname" />
			<input_param name="@owner_id" jt="4" type="int" />
			<input_param name="@version" jt="4" type="int" />
			<input_param name="@definition" jt="2004" type="image" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="sp_dropdiagram" id="Procedure_1b71" isSystem="false" params_known="y" >
			<string><![CDATA[	CREATE PROCEDURE dbo.sp_dropdiagram
	(
		@diagramname 	sysname,
		@owner_id	int	= null
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
		declare @theId 			int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
	
		if(@diagramname is null)
		begin
			RAISERROR ('Invalid value', 16, 1);
			return -1
		end
	
		EXECUTE AS CALLER;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		REVERT; 
		
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)
			return -3
		end
	
		delete from dbo.sysdiagrams where diagram_id = @DiagId;
	
		return 0;
	END
	]]></string>
			<input_param name="@diagramname" jt="12" type="sysname" />
			<input_param name="@owner_id" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="sp_helpdiagramdefinition" id="Procedure_ec6" isSystem="false" params_known="y" >
			<string><![CDATA[	CREATE PROCEDURE dbo.sp_helpdiagramdefinition
	(
		@diagramname 	sysname,
		@owner_id	int	= null 		
	)
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		set nocount on
		declare @theId 		int
		declare @IsDbo 		int
		declare @DiagId		int
		declare @UIDFound	int
	
		if(@diagramname is null)
		begin
			RAISERROR (N'E_INVALIDARG', 16, 1);
			return -1
		end
	
		execute as caller;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner');
		if(@owner_id is null)
			select @owner_id = @theId;
		revert; 
	
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname;
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId ))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1);
			return -3
		end
		select version, definition FROM dbo.sysdiagrams where diagram_id = @DiagId ; 
		return 0
	END
	]]></string>
			<input_param name="@diagramname" jt="12" type="sysname" />
			<input_param name="@owner_id" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="sp_helpdiagrams" id="Procedure_192c" isSystem="false" params_known="y" >
			<string><![CDATA[	CREATE PROCEDURE dbo.sp_helpdiagrams
	(
		@diagramname sysname = NULL,
		@owner_id int = NULL
	)
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		DECLARE @user sysname
		DECLARE @dboLogin bit
		EXECUTE AS CALLER;
			SET @user = USER_NAME();
			SET @dboLogin = CONVERT(bit,IS_MEMBER('db_owner'));
		REVERT;
		SELECT
			[Database] = DB_NAME(),
			[Name] = name,
			[ID] = diagram_id,
			[Owner] = USER_NAME(principal_id),
			[OwnerID] = principal_id
		FROM
			sysdiagrams
		WHERE
			(@dboLogin = 1 OR USER_NAME(principal_id) = @user) AND
			(@diagramname IS NULL OR name = @diagramname) AND
			(@owner_id IS NULL OR principal_id = @owner_id)
		ORDER BY
			4, 5, 1
	END
	]]></string>
			<input_param name="@diagramname" jt="12" type="sysname" />
			<input_param name="@owner_id" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="sp_renamediagram" id="Procedure_1d10" isSystem="false" params_known="y" >
			<string><![CDATA[	CREATE PROCEDURE dbo.sp_renamediagram
	(
		@diagramname 		sysname,
		@owner_id		int	= null,
		@new_diagramname	sysname
	
	)
	WITH EXECUTE AS 'dbo'
	AS
	BEGIN
		set nocount on
		declare @theId 			int
		declare @IsDbo 			int
		
		declare @UIDFound 		int
		declare @DiagId			int
		declare @DiagIdTarg		int
		declare @u_name			sysname
		if((@diagramname is null) or (@new_diagramname is null))
		begin
			RAISERROR ('Invalid value', 16, 1);
			return -1
		end
	
		EXECUTE AS CALLER;
		select @theId = DATABASE_PRINCIPAL_ID();
		select @IsDbo = IS_MEMBER(N'db_owner'); 
		if(@owner_id is null)
			select @owner_id = @theId;
		REVERT;
	
		select @u_name = USER_NAME(@owner_id)
	
		select @DiagId = diagram_id, @UIDFound = principal_id from dbo.sysdiagrams where principal_id = @owner_id and name = @diagramname 
		if(@DiagId IS NULL or (@IsDbo = 0 and @UIDFound <> @theId))
		begin
			RAISERROR ('Diagram does not exist or you do not have permission.', 16, 1)
			return -3
		end
	
		-- if((@u_name is not null) and (@new_diagramname = @diagramname))	-- nothing will change
		--	return 0;
	
		if(@u_name is null)
			select @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @theId and name = @new_diagramname
		else
			select @DiagIdTarg = diagram_id from dbo.sysdiagrams where principal_id = @owner_id and name = @new_diagramname
	
		if((@DiagIdTarg is not null) and  @DiagId <> @DiagIdTarg)
		begin
			RAISERROR ('The name is already used.', 16, 1);
			return -2
		end		
	
		if(@u_name is null)
			update dbo.sysdiagrams set [name] = @new_diagramname, principal_id = @theId where diagram_id = @DiagId
		else
			update dbo.sysdiagrams set [name] = @new_diagramname where diagram_id = @DiagId
		return 0
	END
	]]></string>
			<input_param name="@diagramname" jt="12" type="sysname" />
			<input_param name="@owner_id" jt="4" type="int" />
			<input_param name="@new_diagramname" jt="12" type="sysname" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="sp_upgraddiagrams" id="Procedure_634" isSystem="false" params_known="y" >
			<string><![CDATA[	CREATE PROCEDURE dbo.sp_upgraddiagrams
	AS
	BEGIN
		IF OBJECT_ID(N'dbo.sysdiagrams') IS NOT NULL
			return 0;
	
		CREATE TABLE dbo.sysdiagrams
		(
			name sysname NOT NULL,
			principal_id int NOT NULL,	-- we may change it to varbinary(85)
			diagram_id int PRIMARY KEY IDENTITY,
			version int,
	
			definition varbinary(max)
			CONSTRAINT UK_principal_name UNIQUE
			(
				principal_id,
				name
			)
		);

		/* Add this if we need to have some form of extended properties for diagrams */
		/*
		IF OBJECT_ID(N'dbo.sysdiagram_properties') IS NULL
		BEGIN
			CREATE TABLE dbo.sysdiagram_properties
			(
				diagram_id int,
				name sysname,
				value varbinary(max) NOT NULL
			)
		END
		*/
		IF OBJECT_ID(N'dbo.dtproperties') IS NOT NULL
		begin
			insert into dbo.sysdiagrams
			(
				[name],
				[principal_id],
				[version],
				[definition]
			)
			select	 
				convert(sysname, dgnm.[uvalue]),
				DATABASE_PRINCIPAL_ID(N'dbo'),			-- will change to the sid of sa
				0,							-- zero for old format, dgdef.[version],
				dgdef.[lvalue]
			from dbo.[dtproperties] dgnm
				inner join dbo.[dtproperties] dggd on dggd.[property] = 'DtgSchemaGUID' and dggd.[objectid] = dgnm.[objectid]	
				inner join dbo.[dtproperties] dgdef on dgdef.[property] = 'DtgSchemaDATA' and dgdef.[objectid] = dgnm.[objectid]
				
			where dgnm.[property] = 'DtgSchemaNAME' and dggd.[uvalue] like N'_EA3E6268-D998-11CE-9454-00AA00A3F36E_' 
			return 2;
		end
		return 1;
	END
	]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<function name="fn_diagramobjects" id="Function_139a" isSystem="false" params_known="n" >
			<string><![CDATA[	CREATE FUNCTION dbo.fn_diagramobjects() 
	RETURNS int
	WITH EXECUTE AS N'dbo'
	AS
	BEGIN
		declare @id_upgraddiagrams		int
		declare @id_sysdiagrams			int
		declare @id_helpdiagrams		int
		declare @id_helpdiagramdefinition	int
		declare @id_creatediagram	int
		declare @id_renamediagram	int
		declare @id_alterdiagram 	int 
		declare @id_dropdiagram		int
		declare @InstalledObjects	int
		select @InstalledObjects = 0
		select 	@id_upgraddiagrams = object_id(N'dbo.sp_upgraddiagrams'),
			@id_sysdiagrams = object_id(N'dbo.sysdiagrams'),
			@id_helpdiagrams = object_id(N'dbo.sp_helpdiagrams'),
			@id_helpdiagramdefinition = object_id(N'dbo.sp_helpdiagramdefinition'),
			@id_creatediagram = object_id(N'dbo.sp_creatediagram'),
			@id_renamediagram = object_id(N'dbo.sp_renamediagram'),
			@id_alterdiagram = object_id(N'dbo.sp_alterdiagram'), 
			@id_dropdiagram = object_id(N'dbo.sp_dropdiagram')
		if @id_upgraddiagrams is not null
			select @InstalledObjects = @InstalledObjects + 1
		if @id_sysdiagrams is not null
			select @InstalledObjects = @InstalledObjects + 2
		if @id_helpdiagrams is not null
			select @InstalledObjects = @InstalledObjects + 4
		if @id_helpdiagramdefinition is not null
			select @InstalledObjects = @InstalledObjects + 8
		if @id_creatediagram is not null
			select @InstalledObjects = @InstalledObjects + 16
		if @id_renamediagram is not null
			select @InstalledObjects = @InstalledObjects + 32
		if @id_alterdiagram  is not null
			select @InstalledObjects = @InstalledObjects + 64
		if @id_dropdiagram is not null
			select @InstalledObjects = @InstalledObjects + 128
		
		return @InstalledObjects 
	END
	]]></string>
		</function>
	</schema>
	<connector name="AzureSql" database="AzureSql" host="sqls-rosterd-prod.database.windows.net" port="1433" instance="rosterd" user="rosterd-admin-user" passwd="SzY2cHRoMXNTQGY1" />
	<layout name="Default Layout" id="Layout_2492" show_relation="columns" >
		<entity schema="rosterd.dbo" name="Capability" color="C7F4BE" x="672" y="352" />
		<entity schema="rosterd.dbo" name="Facility" color="C7F4BE" x="352" y="304" />
		<entity schema="rosterd.dbo" name="FacilityCapability" color="C7F4BE" x="592" y="80" />
		<entity schema="rosterd.dbo" name="Job" color="F4DDBE" x="848" y="112" />
		<entity schema="rosterd.dbo" name="JobSkill" color="F4DDBE" x="880" y="384" />
		<entity schema="rosterd.dbo" name="JobStatus" color="F4DDBE" x="1168" y="368" />
		<entity schema="rosterd.dbo" name="JobStatusChange" color="F4DDBE" x="1136" y="112" />
		<entity schema="rosterd.dbo" name="Organization" color="C7F4BE" x="288" y="96" />
		<entity schema="rosterd.dbo" name="Skill" color="BED3F4" x="848" y="560" />
		<entity schema="rosterd.dbo" name="Staff" color="FFFFFF" x="416" y="560" />
		<entity schema="rosterd.dbo" name="StaffFacility" color="FFFFFF" x="672" y="560" />
		<entity schema="rosterd.dbo" name="StaffSkill" color="FFFFFF" x="672" y="704" />
		<entity schema="rosterd.dbo" name="Tenant" color="E6E64D" x="48" y="128" />
		<group name="Skills &amp; Qualifications" color="ECF0F7" >
			<entity schema="rosterd.dbo" name="Skill" />
		</group>
		<group name="Jobs" color="F7F2EC" >
			<entity schema="rosterd.dbo" name="Job" />
			<entity schema="rosterd.dbo" name="JobStatusChange" />
			<entity schema="rosterd.dbo" name="JobSkill" />
			<entity schema="rosterd.dbo" name="JobStatus" />
		</group>
		<group name="Facility" color="EEF7EC" >
			<entity schema="rosterd.dbo" name="Facility" />
			<entity schema="rosterd.dbo" name="FacilityCapability" />
			<entity schema="rosterd.dbo" name="Capability" />
			<entity schema="rosterd.dbo" name="Organization" />
		</group>
		<group name="Staff" color="CCCC33" >
			<entity schema="rosterd.dbo" name="StaffFacility" />
			<entity schema="rosterd.dbo" name="StaffSkill" />
			<entity schema="rosterd.dbo" name="Staff" />
		</group>
		<group name="Tenants" color="FFFF66" >
			<entity schema="rosterd.dbo" name="Tenant" />
		</group>
	</layout>
	<layout name="Sample Layout with Tools" id="Layout_269d" show_column_type="y" show_relation="columns" >
		<entity schema="rosterd.dbo" name="Capability" color="C7F4BE" x="640" y="48" />
		<entity schema="rosterd.dbo" name="Facility" color="C7F4BE" x="64" y="48" />
		<entity schema="rosterd.dbo" name="FacilityCapability" color="C7F4BE" x="368" y="48" />
		<entity schema="rosterd.dbo" name="Job" color="F4DDBE" x="976" y="48" />
		<entity schema="rosterd.dbo" name="JobSkill" color="F4DDBE" x="1296" y="336" />
		<entity schema="rosterd.dbo" name="JobStatus" color="F4DDBE" x="1664" y="48" />
		<entity schema="rosterd.dbo" name="JobStatusChange" color="F4DDBE" x="1296" y="48" />
		<entity schema="rosterd.dbo" name="Organization" color="C7F4BE" x="48" y="336" />
		<entity schema="rosterd.dbo" name="Skill" color="BED3F4" x="976" y="656" />
		<entity schema="rosterd.dbo" name="Staff" color="C7F4BE" x="368" y="336" />
		<entity schema="rosterd.dbo" name="StaffFacility" color="C7F4BE" x="704" y="336" />
		<entity schema="rosterd.dbo" name="StaffSkill" color="C7F4BE" x="704" y="688" />
		<entity schema="rosterd.dbo" name="sysdiagrams" color="BED3F4" x="1248" y="656" />
		<script name="Sample SQL Editor" id="Editor_d3b" language="SQL" >
			<string><![CDATA[SELECT FacilityId, FacilityName, OrganzationId, Address, Suburb, City, Country, PhoneNumber1, PhoneNumber2
FROM
	dbo.Facility y;
GO]]></string>
		</script>
		<browser id="Browse_26f5" name="Sample Relational Data Explorer" confirm_updates="y" >
			<browse_table schema="rosterd.dbo" entity="Facility" x="20" y="20" width="400" height="300" >
				<browse_table schema="rosterd.dbo" entity="FacilityCapability" fk="Fk_FacilityCapability_Facility" x="440" y="20" width="500" height="350" >
					<browse_table schema="rosterd.dbo" entity="Capability" fk="Fk_FacilityCapability_Capability" x="960" y="20" width="500" height="350" record_view="y" />
				</browse_table>
			</browse_table>
		</browser>
		<query id="Query_136" name="Sample Query Builder" >
			<query_table schema="rosterd.dbo" name="Facility" alias="f" x="48" y="48" >
				<column name="FacilityId" />
				<column name="FacilityName" />
				<column name="OrganzationId" />
				<column name="Address" />
				<column name="Suburb" />
				<column name="City" />
				<column name="Country" />
				<column name="PhoneNumber1" />
				<column name="PhoneNumber2" />
				<query_table schema="rosterd.dbo" name="FacilityCapability" alias="f1" x="240" y="48" fk="Fk_FacilityCapability_Facility" type="Inner Join" >
					<column name="FacilityCapabilityId" />
					<column name="FacilityId" />
					<column name="CapabilityId" />
					<query_table schema="rosterd.dbo" name="Capability" alias="c" x="464" y="48" fk="Fk_FacilityCapability_Capability" type="Inner Join" >
						<column name="CapabilityId" />
						<column name="CapabilityName" />
					</query_table>
				</query_table>
			</query_table>
		</query>
		<form name="Sample Data Analyst" id="Form_1f19" template="Centered Page" view="frame" >
			<var name="samplePageNumber" type="4" value="0" mandatory="n" />
			<var name="sampleRecordsPerPage" type="4" value="100" mandatory="n" />
			<body name="Body" template="Grid" pos="0,0,0,0,f,f" layout="{{-2,-2,-2,-2,-1},{-2,-2,-2}}" scroll="n" html="n" >
				<cell type="href" name="" template="Plain" disabled="${!sampleHasNextPage}" pos="3,2,3,2,l,c" glyph="FA-ANGLE_RIGHT" ref_id="Form_1f19" >
					<var name="samplePageNumber" value="${( samplePageNumber+1 )}" />
				</cell>
				<cell type="href" name="" template="Plain" disabled="${samplePageNumber&lt;1}" pos="1,2,1,2,l,c" glyph="FA-ANGLE_LEFT" ref_id="Form_1f19" >
					<var name="samplePageNumber" value="${Math.max(0,samplePageNumber-1)}" />
				</cell>
				<cell type="href" name="" template="Plain" disabled="${samplePageNumber&lt;1}" pos="0,2,0,2,l,c" glyph="FA-ANGLE_DOUBLE_LEFT" ref_id="Form_1f19" >
					<var name="samplePageNumber" value="0" />
				</cell>
				<cell type="label" name="Page ${samplePageNumber+1}" template="Plain" pos="2,2,2,2,l,c" />
				<tableview name="sample" template="Table" css="table table-striped table-bordered table-sm table-hover" pos="0,1,4,1,f,f" layout="{{-2,-2,-2,-2,-2,-2,-2,-2,-2},{-2,-2}}" scroll="n" html="n" header_rows="1" >
					<form_script type="DataSource" language="SQL" >
						<var name="FacilityId" type="-5" />
						<var name="FacilityName" type="-1" />
						<var name="OrganzationId" type="-5" />
						<var name="Address" type="-1" />
						<var name="Suburb" type="-1" />
						<var name="City" type="-1" />
						<var name="Country" type="-1" />
						<var name="PhoneNumber1" type="-1" />
						<var name="PhoneNumber2" type="-1" />
						<script ><![CDATA[SELECT * FROM dbo.Facility]]></script>
					</form_script>
					<cell type="label" name="${Address}" template="Plain" pos="3,1,3,1,l,c" />
					<cell type="label" name="${City}" template="Plain" pos="5,1,5,1,l,c" />
					<cell type="label" name="${Country}" template="Plain" pos="6,1,6,1,l,c" />
					<cell type="label" name="${FacilityId}" template="Plain" pos="0,1,0,1,l,c" />
					<cell type="label" name="${FacilityName}" template="Plain" pos="1,1,1,1,l,c" />
					<cell type="label" name="${OrganzationId}" template="Plain" pos="2,1,2,1,l,c" />
					<cell type="label" name="${PhoneNumber1}" template="Plain" pos="7,1,7,1,l,c" />
					<cell type="label" name="${PhoneNumber2}" template="Plain" pos="8,1,8,1,l,c" />
					<cell type="label" name="${Suburb}" template="Plain" pos="4,1,4,1,l,c" />
					<cell type="label" name="Address" template="Plain" pos="3,0,3,0,c,c" />
					<cell type="label" name="City" template="Plain" pos="5,0,5,0,c,c" />
					<cell type="label" name="Country" template="Plain" pos="6,0,6,0,c,c" />
					<cell type="label" name="FacilityId" template="Plain" pos="0,0,0,0,c,c" />
					<cell type="label" name="FacilityName" template="Plain" pos="1,0,1,0,c,c" />
					<cell type="label" name="OrganzationId" template="Plain" pos="2,0,2,0,c,c" />
					<cell type="label" name="PhoneNumber1" template="Plain" pos="7,0,7,0,c,c" />
					<cell type="label" name="PhoneNumber2" template="Plain" pos="8,0,8,0,c,c" />
					<cell type="label" name="Suburb" template="Plain" pos="4,0,4,0,c,c" />
				</tableview>
				<cell type="label" name="sample" template="H3" pos="0,0,1,0,l,c" />
			</body>
		</form>
	</layout>
</project>