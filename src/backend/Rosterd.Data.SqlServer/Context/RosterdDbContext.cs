// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Rosterd.Data.SqlServer.Models;

#nullable disable

namespace Rosterd.Data.SqlServer.Context
{
    public partial class RosterdDbContext : DbContext, IRosterdDbContext
    {
        public RosterdDbContext()
        {
        }

        public RosterdDbContext(DbContextOptions<RosterdDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Capability> Capability { get; set; }
        public virtual DbSet<Facility> Facility { get; set; }
        public virtual DbSet<FacilityCapability> FacilityCapability { get; set; }
        public virtual DbSet<Job> Job { get; set; }
        public virtual DbSet<JobSkill> JobSkill { get; set; }
        public virtual DbSet<JobStatus> JobStatus { get; set; }
        public virtual DbSet<JobStatusChange> JobStatusChange { get; set; }
        public virtual DbSet<Organization> Organization { get; set; }
        public virtual DbSet<Skill> Skill { get; set; }
        public virtual DbSet<Staff> Staff { get; set; }
        public virtual DbSet<StaffFacility> StaffFacility { get; set; }
        public virtual DbSet<StaffSkill> StaffSkill { get; set; }
        public virtual DbSet<Tenant> Tenant { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Facility>(entity =>
            {
                entity.HasOne(d => d.Organzation)
                    .WithMany(p => p.Facility)
                    .HasForeignKey(d => d.OrganzationId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Fk_Facility_Organization");
            });

            modelBuilder.Entity<FacilityCapability>(entity =>
            {
                entity.HasOne(d => d.Capability)
                    .WithMany(p => p.FacilityCapability)
                    .HasForeignKey(d => d.CapabilityId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Fk_FacilityCapability_Capability");

                entity.HasOne(d => d.Facility)
                    .WithMany(p => p.FacilityCapability)
                    .HasForeignKey(d => d.FacilityId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Fk_FacilityCapability_Facility");
            });

            modelBuilder.Entity<Job>(entity =>
            {
                entity.Property(e => e.Description).IsUnicode(false);
            });

            modelBuilder.Entity<JobSkill>(entity =>
            {
                entity.Property(e => e.JobSkillId).ValueGeneratedNever();

                entity.HasOne(d => d.Job)
                    .WithMany(p => p.JobSkill)
                    .HasForeignKey(d => d.JobId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Fk_Jobskill_Job");
            });

            modelBuilder.Entity<JobStatusChange>(entity =>
            {
                entity.Property(e => e.JobStatusChangeDateTimeUtc)
                    .HasPrecision(1)
                    .HasDefaultValueSql("(switchoffset(sysdatetimeoffset(),'+00:00'))");

                entity.HasOne(d => d.Job)
                    .WithMany(p => p.JobStatusChange)
                    .HasForeignKey(d => d.JobId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Fk_JobStatusChange_Job");

                entity.HasOne(d => d.JobStatus)
                    .WithMany(p => p.JobStatusChange)
                    .HasForeignKey(d => d.JobStatusId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Fk_JobStatusChange_JobStatus");
            });

            modelBuilder.Entity<Organization>(entity =>
            {
                entity.HasOne(d => d.Tenant)
                    .WithMany(p => p.Organization)
                    .HasForeignKey(d => d.TenantId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Fk_Organization_Tenant");
            });

            modelBuilder.Entity<Skill>(entity =>
            {
                entity.Property(e => e.SkillId).ValueGeneratedNever();
            });

            modelBuilder.Entity<StaffFacility>(entity =>
            {
                entity.HasOne(d => d.Staff)
                    .WithMany(p => p.StaffFacility)
                    .HasForeignKey(d => d.StaffId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Fk_StaffFacility_Staff");
            });

            modelBuilder.Entity<StaffSkill>(entity =>
            {
                entity.HasOne(d => d.Staff)
                    .WithMany(p => p.StaffSkill)
                    .HasForeignKey(d => d.StaffId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Fk_StaffSkill_Staff");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
