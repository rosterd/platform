// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Rosterd.Data.SqlServer.Models;

#nullable disable

namespace Rosterd.Data.SqlServer.Context
{
    public partial class RosterdDbContext : DbContext, IRosterdDbContext
    {
        public RosterdDbContext()
        {
        }

        public RosterdDbContext(DbContextOptions<RosterdDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Capability> Capability { get; set; }
        public virtual DbSet<Facility> Facility { get; set; }
        public virtual DbSet<FacilityCapability> FacilityCapability { get; set; }
        public virtual DbSet<Organization> Organization { get; set; }
        public virtual DbSet<Resource> Resource { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Facility>(entity =>
            {
                entity.HasOne(d => d.Organzation)
                    .WithMany(p => p.Facility)
                    .HasForeignKey(d => d.OrganzationId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Fk_Facility_Organization");
            });

            modelBuilder.Entity<FacilityCapability>(entity =>
            {
                entity.HasOne(d => d.Capability)
                    .WithMany(p => p.FacilityCapability)
                    .HasForeignKey(d => d.CapabilityId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Fk_FacilityCapability_Capability");

                entity.HasOne(d => d.Facility)
                    .WithMany(p => p.FacilityCapability)
                    .HasForeignKey(d => d.FacilityId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("Fk_FacilityCapability_Facility");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
